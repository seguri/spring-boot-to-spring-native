apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "database-container.fullname" . }}
  labels:
    {{- include "database-container.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "database-container.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "database-container.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "database-container.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: init-db
              mountPath: /docker-entrypoint-initdb.d
            - name: scripts
              mountPath: /scripts
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
            - name: PRECERT_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: precert-db
            - name: PRECERT_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: precert-user
            - name: PRECERT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: precert-password
            - name: CLAIMS_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: claims-db
            - name: CLAIMS_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: claims-user
            - name: CLAIMS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: claims-password
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: init-db
        hostPath:
          path: /init-db
      - name: scripts
        hostPath:
          path: /scripts